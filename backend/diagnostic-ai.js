#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç SnapCal AI –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
function checkConfig() {
  console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
  
  const envPath = path.join(__dirname, '.env');
  const envExists = fs.existsSync(envPath);
  console.log(`   .env —Ñ–∞–π–ª: ${envExists ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
  
  if (envExists) {
    const envContent = fs.readFileSync(envPath, 'utf8');
    const hasOpenAIKey = envContent.includes('OPENAI_API_KEY=') && 
                        !envContent.includes('OPENAI_API_KEY=your_api_key_here');
    console.log(`   OpenAI API –∫–ª—é—á: ${hasOpenAIKey ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    
    const hasAICache = envContent.includes('AI_CACHE_ENABLED=');
    console.log(`   AI –∫—ç—à: ${hasAICache ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ö†Ô∏è –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é'}`);
    
    const hasFallback = envContent.includes('AI_FALLBACK_ENABLED=');
    console.log(`   AI fallback: ${hasFallback ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ö†Ô∏è –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é'}`);
  }
  
  console.log();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
function checkFileStructure() {
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:');
  
  const requiredFiles = [
    'src/services/aiAnalysisService.js',
    'src/routes/ai.js', 
    'src/config/aiPrompts.js',
    'src/config/aiConfig.js',
    'src/middleware/requestLogger.js',
    'src/middleware/auth-mysql.js'
  ];
  
  requiredFiles.forEach(file => {
    const filePath = path.join(__dirname, file);
    const exists = fs.existsSync(filePath);
    console.log(`   ${file}: ${exists ? '‚úÖ' : '‚ùå'}`);
  });
  
  console.log();
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkDependencies() {
  console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:');
  
  try {
    const packageJson = require('./package.json');
    const requiredDeps = [
      'openai',
      'sharp',
      'express',
      'multer',
      'mysql2'
    ];
    
    requiredDeps.forEach(dep => {
      const installed = packageJson.dependencies?.[dep] || packageJson.devDependencies?.[dep];
      console.log(`   ${dep}: ${installed ? `‚úÖ v${installed}` : '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}`);
    });
    
  } catch (error) {
    console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å package.json');
  }
  
  console.log();
}

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º
function provideRecommendations() {
  console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º:');
  
  console.log('   üîß –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å GIF –∞–Ω–∏–º–∞—Ü–∏–µ–π:');
  console.log('      - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª ai-loading.gif —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ frontend/assets/images/');
  console.log('      - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É GIF –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('      - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ fallback ActivityIndicator –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∑–∞–≥—Ä—É–∑–∫–∏');
  
  console.log('\n   ‚è∞ –ü—Ä–∏ —Ç–∞–π–º–∞—É—Ç–∞—Ö:');
  console.log('      - –£–≤–µ–ª–∏—á—å—Ç–µ —Ç–∞–π–º–∞—É—Ç—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (120s –¥–ª—è frontend, 60s –¥–ª—è OpenAI)');
  console.log('      - –î–æ–±–∞–≤—å—Ç–µ retry –º–µ—Ö–∞–Ω–∏–∑–º —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π');
  console.log('      - –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π');
  
  console.log('\n   üåê –ü—Ä–∏ —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö:');
  console.log('      - –†–µ–∞–ª–∏–∑—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π');
  console.log('      - –î–æ–±–∞–≤—å—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫');
  console.log('      - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ fallback –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ AI');
  
  console.log();
}

// –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
async function runDiagnostics() {
  try {
    checkConfig();
    checkFileStructure();
    checkDependencies();
    provideRecommendations();
    
    console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìù –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫
runDiagnostics(); 